diff -up openssh-6.2p2/configure.ac.ecc openssh-6.2p2/configure.ac
--- openssh-6.2p2/configure.ac.ecc	2013-06-12 15:53:42.507017657 +0200
+++ openssh-6.2p2/configure.ac	2013-06-12 15:53:42.534017598 +0200
@@ -2512,7 +2512,7 @@ AC_SUBST([TEST_SSH_SHA256])
 
 # Check complete ECC support in OpenSSL
 AC_MSG_CHECKING([whether OpenSSL has complete ECC support])
-AC_LINK_IFELSE(
+AC_RUN_IFELSE(
 	[AC_LANG_PROGRAM([[
 #include <openssl/ec.h>
 #include <openssl/ecdh.h>
@@ -2524,8 +2524,9 @@ AC_LINK_IFELSE(
 # error "OpenSSL < 0.9.8g has unreliable ECC code"
 #endif
 	]], [[
-	EC_KEY *e = EC_KEY_new_by_curve_name(NID_secp521r1);
+	EC_KEY *e = EC_KEY_new_by_curve_name(NID_secp384r1);
 	const EVP_MD *m = EVP_sha512(); /* We need this too */
+	exit (e == NULL || m == NULL);
 	]])],
 	[
 		AC_MSG_RESULT([yes])
diff -up openssh-6.2p2/regress/kextype.sh.ecc openssh-6.2p2/regress/kextype.sh
--- openssh-6.2p2/regress/kextype.sh.ecc	2013-06-12 16:06:39.718376529 +0200
+++ openssh-6.2p2/regress/kextype.sh	2013-06-12 16:06:47.587343883 +0200
@@ -8,7 +8,7 @@ cp $OBJ/sshd_proxy $OBJ/sshd_proxy_bak
 cp $OBJ/ssh_proxy $OBJ/ssh_proxy_bak
 
 if test "$TEST_SSH_ECC" = "yes"; then
-	kextypes="ecdh-sha2-nistp256 ecdh-sha2-nistp384 ecdh-sha2-nistp521"
+	kextypes="ecdh-sha2-nistp256 ecdh-sha2-nistp384"
 fi
 if test "$TEST_SSH_SHA256" = "yes"; then
 	kextypes="$kextypes diffie-hellman-group-exchange-sha256"
diff -up openssh-6.2p2/regress/keytype.sh.ecc openssh-6.2p2/regress/keytype.sh
--- openssh-6.2p2/regress/keytype.sh.ecc	2012-02-15 08:01:42.000000000 +0100
+++ openssh-6.2p2/regress/keytype.sh	2013-06-12 15:53:42.534017598 +0200
@@ -13,7 +13,7 @@ cp $OBJ/ssh_proxy $OBJ/ssh_proxy_bak
 
 ktypes="dsa-1024 rsa-2048 rsa-3072"
 if test "$TEST_SSH_ECC" = "yes"; then
-	ktypes="$ktypes ecdsa-256 ecdsa-384 ecdsa-521"
+	ktypes="$ktypes ecdsa-256 ecdsa-384"
 fi
 
 for kt in $ktypes; do 

diff -up openssh-5.3p1/session.c.privsep openssh-5.3p1/session.c
--- openssh-5.3p1/session.c.privsep	2012-04-23 14:23:03.747701150 +0200
+++ openssh-5.3p1/session.c	2012-04-23 14:24:59.097013562 +0200
@@ -1565,6 +1565,13 @@ do_setusercontext(struct passwd *pw)
 #endif
 	}
 
+#ifdef WITH_SELINUX
+	if (options.chroot_directory == NULL ||
+	    strcasecmp(options.chroot_directory, "none") == 0) {
+		ssh_selinux_copy_context();
+	}
+#endif
+
 	if (getuid() != pw->pw_uid || geteuid() != pw->pw_uid)
 		fatal("Failed to set uids to %u.", (u_int) pw->pw_uid);
 }
@@ -1577,6 +1584,9 @@ do_pwchange(Session *s)
 	if (s->ttyfd != -1) {
 		fprintf(stderr,
 		    "You must change your password now and login again!\n");
+#ifdef WITH_SELINUX
+		setexeccon(NULL);
+#endif
 #ifdef PASSWD_NEEDS_USERNAME
 		execl(_PATH_PASSWD_PROG, "passwd", s->pw->pw_name,
 		    (char *)NULL);
@@ -1698,7 +1708,9 @@ do_child(Session *s, const char *command
 		/* When PAM is enabled we rely on it to do the nologin check */
 		if (!options.use_pam)
 			do_nologin(pw);
-		do_setusercontext(pw);
+		/* We are already separated */
+		if (!use_privsep)
+			do_setusercontext(pw);
 		/*
 		 * PAM session modules in do_setusercontext may have
 		 * generated messages, so if this in an interactive
@@ -1806,8 +1818,9 @@ do_child(Session *s, const char *command
 		char *p, *args;
 
 #ifdef WITH_SELINUX
-		if (options.chroot_directory == NULL ||
-		    strcasecmp(options.chroot_directory, "none") == 0) {
+		if (!use_privsep &&
+		    (options.chroot_directory == NULL ||
+		    strcasecmp(options.chroot_directory, "none") == 0)) {
 			ssh_selinux_copy_context();
 		}
 #endif

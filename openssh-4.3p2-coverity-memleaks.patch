Some memleaks fixes from coverity scan taken from upstream CVS
--- openssh/auth2-gss.c	2005/11/05 05:07:05	1.13
+++ openssh/auth2-gss.c	2006/03/25 14:04:53	1.14
@@ -100,6 +100,8 @@
 	}
 
 	if (GSS_ERROR(PRIVSEP(ssh_gssapi_server_ctx(&ctxt, &goid)))) {
+		if (ctxt != NULL)
+			ssh_gssapi_delete_ctx(&ctxt);
 		xfree(doid);
 		return (0);
 	}
--- openssh/gss-genr.c	2005/11/05 05:07:05	1.7
+++ openssh/gss-genr.c	2006/03/25 14:05:23	1.8
@@ -72,7 +72,11 @@
 void
 ssh_gssapi_error(Gssctxt *ctxt)
 {
-	debug("%s", ssh_gssapi_last_error(ctxt, NULL, NULL));
+	char *s;
+
+	s = ssh_gssapi_last_error(ctxt, NULL, NULL);
+	debug("%s", s);
+	xfree(s);
 }
 
 char *
@@ -231,11 +235,15 @@
 	gss_create_empty_oid_set(&status, &oidset);
 	gss_add_oid_set_member(&status, ctx->oid, &oidset);
 
-	if (gethostname(lname, MAXHOSTNAMELEN))
+	if (gethostname(lname, MAXHOSTNAMELEN)) {
+		gss_release_oid_set(&status, &oidset);
 		return (-1);
+	}
 
-	if (GSS_ERROR(ssh_gssapi_import_name(ctx, lname)))
+	if (GSS_ERROR(ssh_gssapi_import_name(ctx, lname))) {
+		gss_release_oid_set(&status, &oidset);
 		return (ctx->major);
+	}
 
 	if ((ctx->major = gss_acquire_cred(&ctx->minor,
 	    ctx->name, 0, oidset, GSS_C_ACCEPT, &ctx->creds, NULL, NULL)))
--- openssh/gss-serv.c	2006/03/15 01:20:04	1.14
+++ openssh/gss-serv.c	2006/03/25 14:05:44	1.15
@@ -78,6 +78,8 @@
 			    &supported_mechs[i]->oid, oidset);
 		i++;
 	}
+
+	gss_release_oid_set(&min_status, &supported);
 }
 
 
--- openssh/monitor.c	2006/03/26 03:58:56	1.96
+++ openssh/monitor.c	2006/03/26 04:01:55	1.97
@@ -1021,6 +1021,10 @@
 		key_blobtype = type;
 		hostbased_cuser = cuser;
 		hostbased_chost = chost;
+	} else {
+		xfree(blob);
+		xfree(cuser);
+		xfree(chost);
 	}
 
 	debug3("%s: key %p is %s",
--- openssh/sftp.c	2006/03/25 14:03:23	1.82
+++ openssh/sftp.c	2006/03/26 03:51:44	1.83
@@ -548,6 +548,7 @@
 
 		if (g.gl_matchc == 1 && dst) {
 			/* If directory specified, append filename */
+			xfree(tmp);
 			if (is_dir(dst)) {
 				if (infer_path(g.gl_pathv[0], &tmp)) {
 					err = 1;
@@ -572,8 +573,6 @@
 
 out:
 	xfree(abs_src);
-	if (abs_dst)
-		xfree(abs_dst);
 	globfree(&g);
 	return(err);
 }
@@ -1289,6 +1288,7 @@
 			if (parse_dispatch_command(conn, cmd, &pwd, 1) != 0) {
 				xfree(dir);
 				xfree(pwd);
+				xfree(conn);
 				return (-1);
 			}
 		} else {
@@ -1301,6 +1301,7 @@
 			err = parse_dispatch_command(conn, cmd, &pwd, 1);
 			xfree(dir);
 			xfree(pwd);
+			xfree(conn);
 			return (err);
 		}
 		xfree(dir);
@@ -1365,6 +1366,7 @@
 			break;
 	}
 	xfree(pwd);
+	xfree(conn);
 
 #ifdef USE_LIBEDIT
 	if (el != NULL)
--- openssh/serverloop.c	2006/03/25 14:03:23	1.131
+++ openssh/serverloop.c	2006/03/26 03:51:09	1.132
@@ -1090,6 +1090,7 @@
 
 		success = channel_cancel_rport_listener(cancel_address,
 		    cancel_port);
+		xfree(cancel_address);
 	}
 	if (want_reply) {
 		packet_start(success ?

